name: Check Quality and Test

on:
  pull_request:

env:
  PYTHON_VERSION: 3.11

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      # The installation is required as mypy must be run in the local system environment, not in the pre-commit environment.
      - name: Install required dependencies
        run: |
          python3 -m pip install --upgrade pip poetry
          poetry config virtualenvs.create false
          poetry install

      - name: Linting and static code checks
        run: |
          pre-commit run --all-files

  checks:
    permissions:
      id-token: write
      contents: read

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Set up cache
        uses: actions/cache@v3.3.1
        with:
          path: .venv
          key: venv-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('poetry.lock') }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.3.1

      - run: poetry install -E all

      - name: Git diff (in case linting fails, prints why)
        if: always()
        run: git diff .

      - name: Run tests
        run: export PYTHONPATH=$PYTHONPATH:$(pwd); poetry run pytest

      - name: Run notebook tests
        run: export PYTHONPATH=$PYTHONPATH:$(pwd); poetry run pytest ./docs/tutorial/notebooks/ --nb-test-files

      - name: Run security checks
        run: poetry check

  build-image:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # Poetry is required to export requirements.txt
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.3.1

      - name: Build Image
        run: make build-docker

      - name: Run and Verify
        run: |
          make compose-up-d
          # Give the application time to startup
          sleep 10s
          curl --fail  http://localhost:8000/static/index.html

      - name: Shutdown containers
        if: always()
        working-directory: ./docker
        run: docker compose down

  build-docs:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade --upgrade-strategy eager --no-cache-dir .[docs]

      - name: Build documentation
        run: |
          mkdocs build
