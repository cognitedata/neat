============================= test session starts =============================
platform win32 -- Python 3.13.5, pytest-8.3.5, pluggy-1.6.0 -- C:\Users\AndersAlbert\Projects\main\neat\.venv\Scripts\python.exe
cachedir: .pytest_cache
hypothesis profile 'default'
rootdir: C:\Users\AndersAlbert\Projects\main\neat
configfile: pyproject.toml
plugins: anyio-4.9.0, Faker-37.8.0, hypothesis-6.135.14, cov-6.1.1, datadir-1.6.1, freezegun-0.4.2, pytest_notebook-0.10.0, regressions-2.7.0, xdist-3.6.1, respx-0.22.0
collecting ... collected 1 item

tests/tests_unit/test_data_model/test_deployer/test_diff_container.py::TestContainerDiffer::test_diff[comprehensive changes: add/remove/modify properties, constraints and indexes] FAILED [100%]

================================== FAILURES ===================================
_ TestContainerDiffer.test_diff[comprehensive changes: add/remove/modify properties, constraints and indexes] _

self = <tests.tests_unit.test_data_model.test_deployer.test_diff_container.TestContainerDiffer object at 0x000001DBF1192E90>
resource = ContainerRequest(space='test_space', external_id='test_container', name='Test Container', description='This is a test ...s=['category'], by_space=False, cursorable=False), 'idx3': InvertedIndex(index_type='inverted', properties=['count'])})
expected_diff = [ContainerPropertyChange(field_path='properties.distance', changed_items=[PrimitivePropertyChange(field_path='name', i... new_value=UniquenessConstraintDefinition(constraint_type='uniqueness', properties=['category'], by_space=False)), ...]

    @pytest.mark.parametrize(
        "resource,expected_diff",
        [
            pytest.param(
                cdf_container,
                [],
                id="no changes",
            ),
            pytest.param(
                ContainerRequest(
                    space="test_space",
                    externalId="test_container",
                    name="Test Container",
                    description="This is a test container.",
                    usedFor="node",
                    properties={
                        # "name" removed
                        "distance": ContainerPropertyDefinition(
                            type=Float32Property(
                                unit=Unit(externalId="unit:kilometer", sourceUnit="kilometer"),
                                list=False,
                                maxListSize=None,
                            ),
                            nullable=False,
                            immutable=True,
                            name="Distance in km",
                            description="The distance property in kilometers",
                            default_value=0.0,
                            auto_increment=True,
                        ),
                        "category": ContainerPropertyDefinition(
                            type=EnumProperty(
                                unknownValue="newUnknoown",
                                values={
                                    "cat1": EnumValue(name="Category One", description="The first category updated"),
                                    "cat3": EnumValue(),
                                },
                            )
                        ),
                        # Added new property
                        "count": ContainerPropertyDefinition(
                            type=Int32Property(),
                            name="Count",
                            description="A count property",
                            nullable=True,
                            immutable=False,
                        ),
                    },
                    constraints={
                        # Modified constraint: changed require reference
                        "req1": RequiresConstraintDefinition(
                            require=ContainerReference(space="new_space", external_id="new_container"),
                        ),
                        # "uniq1" removed
                        # Added new constraint
                        "uniq2": UniquenessConstraintDefinition(
                            properties=["category"],
                            bySpace=False,
                        ),
                    },
                    indexes={
                        # Modified index: changed properties and cursorable
                        "idx1": BtreeIndex(
                            properties=["category"],
                            cursorable=False,
                            bySpace=False,
                        ),
                        # "idx2" removed
                        # Added new index
                        "idx3": InvertedIndex(
                            properties=["count"],
                        ),
                    },
                ),
                [
                    # Modified property "distance" - both type changes and property metadata
                    ContainerPropertyChange(
                        field_path="properties.distance",
                        changed_items=[
                            PrimitivePropertyChange(
                                field_path="name",
                                item_severity=SeverityType.SAFE,
                                old_value=None,
                                new_value="Distance in km",
                            ),
                            PrimitivePropertyChange(
                                field_path="description",
                                item_severity=SeverityType.SAFE,
                                old_value=None,
                                new_value="The distance property in kilometers",
                            ),
                            PrimitivePropertyChange(
                                field_path="list",
                                item_severity=SeverityType.BREAKING,
                                old_value=True,
                                new_value=False,
                            ),
                            PrimitivePropertyChange(
                                field_path="maxListSize",
                                item_severity=SeverityType.WARNING,
                                old_value=100,
                                new_value=None,
                            ),
                            PrimitivePropertyChange(
                                field_path="unit.externalId",
                                item_severity=SeverityType.WARNING,
                                old_value="unit:meter",
                                new_value="unit:kilometer",
                            ),
                            PrimitivePropertyChange(
                                field_path="unit.sourceUnit",
                                item_severity=SeverityType.WARNING,
                                old_value="meter",
                                new_value="kilometer",
                            ),
                            PrimitivePropertyChange(
                                field_path="immutable",
                                item_severity=SeverityType.BREAKING,
                                old_value=False,
                                new_value=True,
                            ),
                            PrimitivePropertyChange(
                                field_path="nullable",
                                item_severity=SeverityType.BREAKING,
                                old_value=True,
                                new_value=False,
                            ),
                        ],
                    ),
                    # Modified property "category" - enum changes
                    ContainerPropertyChange(
                        field_path="properties.category",
                        changed_items=[
                            PrimitivePropertyChange(
                                field_path="unknownValue",
                                item_severity=SeverityType.WARNING,
                                old_value="unknown",
                                new_value="newUnknoown",
                            ),
                            ContainerPropertyChange(
                                field_path="enumValues.cat1",
                                changed_items=[
                                    PrimitivePropertyChange(
                                        field_path="name",
                                        item_severity=SeverityType.SAFE,
                                        old_value="Category 1",
                                        new_value="Category One",
                                    ),
                                    PrimitivePropertyChange(
                                        field_path="description",
                                        item_severity=SeverityType.SAFE,
                                        old_value="The first category",
                                        new_value="The first category updated",
                                    ),
                                ],
                            ),
                            AddedProperty(
                                field_path="enumValues.cat3",
                                item_severity=SeverityType.SAFE,
                                new_value=EnumValue(),
                            ),
                            RemovedProperty(
                                field_path="enumValues.cat2",
                                item_severity=SeverityType.BREAKING,
                                old_value=EnumValue(),
                            ),
                        ],
                    ),
                    # Added new property "count"
                    AddedProperty(
                        field_path="properties.count",
                        item_severity=SeverityType.SAFE,
                        new_value=ContainerPropertyDefinition(
                            type=Int32Property(),
                            name="Count",
                            description="A count property",
                            nullable=True,
                            immutable=False,
                        ),
                    ),
                    # Removed property "name"
                    RemovedProperty(
                        field_path="properties.name",
                        item_severity=SeverityType.BREAKING,
                        old_value=ContainerPropertyDefinition(
                            type=TextProperty(maxTextSize=100),
                            name="Name",
                            description="The name property",
                            nullable=False,
                            immutable=False,
                            default_value=None,
                            auto_increment=None,
                        ),
                    ),
                    # Modified constraint "req1"
                    ContainerPropertyChange(
                        field_path="constraints.req1",
                        changed_items=[
                            PrimitivePropertyChange(
                                field_path="require",
                                item_severity=SeverityType.WARNING,
                                old_value="other_space:other_container",
                                new_value="new_space:new_container",
                            ),
                        ],
                    ),
                    # Added new constraint "uniq2"
                    AddedProperty(
                        field_path="constraints.uniq2",
                        item_severity=SeverityType.SAFE,
                        new_value=UniquenessConstraintDefinition(
                            properties=["category"],
                            bySpace=False,
                        ),
                    ),
                    # Removed constraint "uniq1"
                    RemovedProperty(
                        field_path="constraints.uniq1",
                        item_severity=SeverityType.WARNING,
                        old_value=UniquenessConstraintDefinition(
                            properties=["name"],
                            bySpace=True,
                        ),
                    ),
                    # Modified index "idx1"
                    ContainerPropertyChange(
                        field_path="indexes.idx1",
                        changed_items=[
                            PrimitivePropertyChange(
                                field_path="properties",
                                item_severity=SeverityType.WARNING,
                                old_value="['name']",
                                new_value="['category']",
                            ),
                            PrimitivePropertyChange(
                                field_path="cursorable",
                                item_severity=SeverityType.WARNING,
                                old_value=True,
                                new_value=False,
                            ),
                        ],
                    ),
                    # Added new index "idx3"
                    AddedProperty(
                        field_path="indexes.idx3",
                        item_severity=SeverityType.SAFE,
                        new_value=InvertedIndex(
                            properties=["count"],
                        ),
                    ),
                    # Removed index "idx2"
                    RemovedProperty(
                        field_path="indexes.idx2",
                        item_severity=SeverityType.WARNING,
                        old_value=InvertedIndex(
                            properties=["category", "distance"],
                        ),
                    ),
                ],
                id="comprehensive changes: add/remove/modify properties, constraints and indexes",
            ),
            pytest.param(
                ContainerRequest(
                    space="test_space",
                    externalId="test_container",
                    name="Test Container Updated",
                    description="This is a test container with updated name.",
                    usedFor="all",
                    properties={
                        "name": ContainerPropertyDefinition(
                            type=TextProperty(collation="ucs_basic", maxTextSize=50),
                            name="Name",
                            description="The name property",
                            nullable=False,
                            immutable=False,
                            defaultValue="Default Name",
                            autoIncrement=False,
                        ),
                        "distance": ContainerPropertyDefinition(type=Float64Property()),
                        "category": cdf_container.properties["category"],
                    },
                    constraints=cdf_container.constraints,
                    indexes=cdf_container.indexes,
                ),
                [
                    PrimitivePropertyChange(
                        field_path="name",
                        item_severity=SeverityType.SAFE,
                        old_value="Test Container",
                        new_value="Test Container Updated",
                    ),
                    PrimitivePropertyChange(
                        field_path="description",
                        item_severity=SeverityType.SAFE,
                        old_value="This is a test container.",
                        new_value="This is a test container with updated name.",
                    ),
                    PrimitivePropertyChange(
                        field_path="usedFor",
                        item_severity=SeverityType.BREAKING,
                        old_value="node",
                        new_value="all",
                    ),
                    ContainerPropertyChange(
                        field_path="properties.name",
                        changed_items=[
                            PrimitivePropertyChange(
                                field_path="maxTextSize",
                                item_severity=SeverityType.BREAKING,
                                old_value=100,
                                new_value=50,
                            ),
                            PrimitivePropertyChange(
                                field_path="collation",
                                item_severity=SeverityType.BREAKING,
                                old_value=None,
                                new_value="ucs_basic",
                            ),
                        ],
                    ),
                    ContainerPropertyChange(
                        field_path="properties.distance",
                        changed_items=[
                            PrimitivePropertyChange(
                                field_path="type",
                                item_severity=SeverityType.BREAKING,
                                old_value="float32",
                                new_value="float64",
                            ),
                            PrimitivePropertyChange(
                                field_path="list",
                                item_severity=SeverityType.BREAKING,
                                old_value=True,
                                new_value=None,
                            ),
                            PrimitivePropertyChange(
                                field_path="maxListSize",
                                item_severity=SeverityType.WARNING,
                                old_value=100,
                                new_value=None,
                            ),
                            PrimitivePropertyChange(
                                field_path="immutable",
                                item_severity=SeverityType.BREAKING,
                                old_value=False,
                                new_value=None,
                            ),
                            PrimitivePropertyChange(
                                field_path="nullable",
                                item_severity=SeverityType.BREAKING,
                                old_value=True,
                                new_value=None,
                            ),
                        ],
                    ),
                ],
                id="Modify top level, change in Text Property, change DataType",
            ),
        ],
    )
    def test_diff(self, resource: ContainerRequest, expected_diff: list[PropertyChange]) -> None:
        actual_diffs = ContainerDiffer().diff(
            self.cdf_container,
            resource,
        )
>       assert actual_diffs == expected_diff
E       assert [ContainerPropertyChange(field_path='properties.distance', changed_items=[PrimitivePropertyChange(field_path='name', item_severity=<SeverityType.SAFE: 1>, new_value='Distance in km', old_value=None), PrimitivePropertyChange(field_path='description', item_severity=<SeverityType.SAFE: 1>, new_value='The distance property in kilometers', old_value=None), PrimitivePropertyChange(field_path='list', item_severity=<SeverityType.BREAKING: 3>, new_value=False, old_value=True), PrimitivePropertyChange(field_path='maxListSize', item_severity=<SeverityType.WARNING: 2>, new_value=None, old_value=100), PrimitivePropertyChange(field_path='unit.externalId', item_severity=<SeverityType.WARNING: 2>, new_value='unit:kilometer', old_value='unit:meter'), PrimitivePropertyChange(field_path='unit.sourceUnit', item_severity=<SeverityType.WARNING: 2>, new_value='kilometer', old_value='meter'), PrimitivePropertyChange(field_path='immutable', item_severity=<SeverityType.BREAKING: 3>, new_value=True, old_value=False), PrimitivePropertyChange(field_path='nullable', item_severity=<SeverityType.BREAKING: 3>, new_value=False, old_value=True)]), ContainerPropertyChange(field_path='properties.category', changed_items=[PrimitivePropertyChange(field_path='unknownValue', item_severity=<SeverityType.WARNING: 2>, new_value='newUnknoown', old_value='unknown'), ContainerPropertyChange(field_path='enumValues.cat1', changed_items=[PrimitivePropertyChange(field_path='name', item_severity=<SeverityType.SAFE: 1>, new_value='Category One', old_value='Category 1'), PrimitivePropertyChange(field_path='description', item_severity=<SeverityType.SAFE: 1>, new_value='The first category updated', old_value='The first category')]), AddedProperty(field_path='enumValues.cat3', item_severity=<SeverityType.SAFE: 1>, new_value=EnumValue(name=None, description=None)), RemovedProperty(field_path='enumValues.cat2', item_severity=<SeverityType.BREAKING: 3>, old_value=EnumValue(name=None, description=None))]), AddedProperty(field_path='properties.count', item_severity=<SeverityType.SAFE: 1>, new_value=ContainerPropertyDefinition(immutable=False, nullable=True, auto_increment=None, default_value=None, description='A count property', name='Count', type=Int32Property(type='int32', list=None, max_list_size=None))), RemovedProperty(field_path='properties.name', item_severity=<SeverityType.BREAKING: 3>, old_value=ContainerPropertyDefinition(immutable=False, nullable=False, auto_increment=False, default_value='Default Name', description='The name property', name='Name', type=TextProperty(type='text', list=None, max_list_size=None, max_text_size=100, collation=None))), ContainerPropertyChange(field_path='constraints.req1', changed_items=[PrimitivePropertyChange(field_path='require', item_severity=<SeverityType.WARNING: 2>, new_value='new_space:new_container', old_value='other_space:other_container')]), AddedProperty(field_path='constraints.uniq2', item_severity=<SeverityType.SAFE: 1>, new_value=UniquenessConstraintDefinition(constraint_type='uniqueness', properties=['category'], by_space=False)), RemovedProperty(field_path='constraints.uniq1', item_severity=<SeverityType.WARNING: 2>, old_value=UniquenessConstraintDefinition(constraint_type='uniqueness', properties=['name'], by_space=True)), ContainerPropertyChange(field_path='indexes.idx1', changed_items=[PrimitivePropertyChange(field_path='properties', item_severity=<SeverityType.WARNING: 2>, new_value="['category']", old_value="['name']"), PrimitivePropertyChange(field_path='cursorable', item_severity=<SeverityType.WARNING: 2>, new_value=False, old_value=True)]), AddedProperty(field_path='indexes.idx3', item_severity=<SeverityType.SAFE: 1>, new_value=InvertedIndex(index_type='inverted', properties=['count'])), RemovedProperty(field_path='indexes.idx2', item_severity=<SeverityType.WARNING: 2>, old_value=InvertedIndex(index_type='inverted', properties=['category', 'distance']))] == [ContainerPropertyChange(field_path='properties.distance', changed_items=[PrimitivePropertyChange(field_path='name', item_severity=<SeverityType.SAFE: 1>, new_value='Distance in km', old_value=None), PrimitivePropertyChange(field_path='description', item_severity=<SeverityType.SAFE: 1>, new_value='The distance property in kilometers', old_value=None), PrimitivePropertyChange(field_path='list', item_severity=<SeverityType.BREAKING: 3>, new_value=False, old_value=True), PrimitivePropertyChange(field_path='maxListSize', item_severity=<SeverityType.WARNING: 2>, new_value=None, old_value=100), PrimitivePropertyChange(field_path='unit.externalId', item_severity=<SeverityType.WARNING: 2>, new_value='unit:kilometer', old_value='unit:meter'), PrimitivePropertyChange(field_path='unit.sourceUnit', item_severity=<SeverityType.WARNING: 2>, new_value='kilometer', old_value='meter'), PrimitivePropertyChange(field_path='immutable', item_severity=<SeverityType.BREAKING: 3>, new_value=True, old_value=False), PrimitivePropertyChange(field_path='nullable', item_severity=<SeverityType.BREAKING: 3>, new_value=False, old_value=True)]), ContainerPropertyChange(field_path='properties.category', changed_items=[PrimitivePropertyChange(field_path='unknownValue', item_severity=<SeverityType.WARNING: 2>, new_value='newUnknoown', old_value='unknown'), ContainerPropertyChange(field_path='enumValues.cat1', changed_items=[PrimitivePropertyChange(field_path='name', item_severity=<SeverityType.SAFE: 1>, new_value='Category One', old_value='Category 1'), PrimitivePropertyChange(field_path='description', item_severity=<SeverityType.SAFE: 1>, new_value='The first category updated', old_value='The first category')]), AddedProperty(field_path='enumValues.cat3', item_severity=<SeverityType.SAFE: 1>, new_value=EnumValue(name=None, description=None)), RemovedProperty(field_path='enumValues.cat2', item_severity=<SeverityType.BREAKING: 3>, old_value=EnumValue(name=None, description=None))]), AddedProperty(field_path='properties.count', item_severity=<SeverityType.SAFE: 1>, new_value=ContainerPropertyDefinition(immutable=False, nullable=True, auto_increment=None, default_value=None, description='A count property', name='Count', type=Int32Property(type='int32', list=None, max_list_size=None))), RemovedProperty(field_path='properties.name', item_severity=<SeverityType.BREAKING: 3>, old_value=ContainerPropertyDefinition(immutable=False, nullable=False, auto_increment=None, default_value=None, description='The name property', name='Name', type=TextProperty(type='text', list=None, max_list_size=None, max_text_size=100, collation=None))), ContainerPropertyChange(field_path='constraints.req1', changed_items=[PrimitivePropertyChange(field_path='require', item_severity=<SeverityType.WARNING: 2>, new_value='new_space:new_container', old_value='other_space:other_container')]), AddedProperty(field_path='constraints.uniq2', item_severity=<SeverityType.SAFE: 1>, new_value=UniquenessConstraintDefinition(constraint_type='uniqueness', properties=['category'], by_space=False)), RemovedProperty(field_path='constraints.uniq1', item_severity=<SeverityType.WARNING: 2>, old_value=UniquenessConstraintDefinition(constraint_type='uniqueness', properties=['name'], by_space=True)), ContainerPropertyChange(field_path='indexes.idx1', changed_items=[PrimitivePropertyChange(field_path='properties', item_severity=<SeverityType.WARNING: 2>, new_value="['category']", old_value="['name']"), PrimitivePropertyChange(field_path='cursorable', item_severity=<SeverityType.WARNING: 2>, new_value=False, old_value=True)]), AddedProperty(field_path='indexes.idx3', item_severity=<SeverityType.SAFE: 1>, new_value=InvertedIndex(index_type='inverted', properties=['count'])), RemovedProperty(field_path='indexes.idx2', item_severity=<SeverityType.WARNING: 2>, old_value=InvertedIndex(index_type='inverted', properties=['category', 'distance']))]
E         
E         At index 3 diff: RemovedProperty(field_path='properties.name', item_severity=<SeverityType.BREAKING: 3>, old_value=ContainerPropertyDefinition(immutable=False, nullable=False, auto_increment=False, default_value='Default Name', description='The name property', name='Name', type=TextProperty(type='text', list=None, max_list_size=None, max_text_size=100, collation=None))) != RemovedProperty(field_path='properties.name', item_severity=<SeverityType.BREAKING: 3>, old_value=ContainerPropertyDefinition(immutable=False, nullable=False, auto_increment=None, default_value=None, description='The name property', name='Name', type=TextProperty(type='text', list=None, max_list_size=None, max_text_size=100, collation=None)))
E         
E         Full diff:
E           [
E               ContainerPropertyChange(field_path='properties.distance', changed_items=[PrimitivePropertyChange(field_path='name', item_severity=<SeverityType.SAFE: 1>, new_value='Distance in km', old_value=None), PrimitivePropertyChange(field_path='description', item_severity=<SeverityType.SAFE: 1>, new_value='The distance property in kilometers', old_value=None), PrimitivePropertyChange(field_path='list', item_severity=<SeverityType.BREAKING: 3>, new_value=False, old_value=True), PrimitivePropertyChange(field_path='maxListSize', item_severity=<SeverityType.WARNING: 2>, new_value=None, old_value=100), PrimitivePropertyChange(field_path='unit.externalId', item_severity=<SeverityType.WARNING: 2>, new_value='unit:kilometer', old_value='unit:meter'), PrimitivePropertyChange(field_path='unit.sourceUnit', item_severity=<SeverityType.WARNING: 2>, new_value='kilometer', old_value='meter'), PrimitivePropertyChange(field_path='immutable', item_severity=<SeverityType.BREAKING: 3>, new_value=True, old_value=False), PrimitivePropertyChange(field_path='nullable', item_severity=<SeverityType.BREAKING: 3>, new_value=False, old_value=True)]),
E               ContainerPropertyChange(field_path='properties.category', changed_items=[PrimitivePropertyChange(field_path='unknownValue', item_severity=<SeverityType.WARNING: 2>, new_value='newUnknoown', old_value='unknown'), ContainerPropertyChange(field_path='enumValues.cat1', changed_items=[PrimitivePropertyChange(field_path='name', item_severity=<SeverityType.SAFE: 1>, new_value='Category One', old_value='Category 1'), PrimitivePropertyChange(field_path='description', item_severity=<SeverityType.SAFE: 1>, new_value='The first category updated', old_value='The first category')]), AddedProperty(field_path='enumValues.cat3', item_severity=<SeverityType.SAFE: 1>, new_value=EnumValue(name=None, description=None)), RemovedProperty(field_path='enumValues.cat2', item_severity=<SeverityType.BREAKING: 3>, old_value=EnumValue(name=None, description=None))]),
E               AddedProperty(field_path='properties.count', item_severity=<SeverityType.SAFE: 1>, new_value=ContainerPropertyDefinition(immutable=False, nullable=True, auto_increment=None, default_value=None, description='A count property', name='Count', type=Int32Property(type='int32', list=None, max_list_size=None))),
E         -     RemovedProperty(field_path='properties.name', item_severity=<SeverityType.BREAKING: 3>, old_value=ContainerPropertyDefinition(immutable=False, nullable=False, auto_increment=None, default_value=None, description='The name property', name='Name', type=TextProperty(type='text', list=None, max_list_size=None, max_text_size=100, collation=None))),
E         ?                                                                                                                                                                                   ^^^^^               ^^^^^
E         +     RemovedProperty(field_path='properties.name', item_severity=<SeverityType.BREAKING: 3>, old_value=ContainerPropertyDefinition(immutable=False, nullable=False, auto_increment=False, default_value='Default Name', description='The name property', name='Name', type=TextProperty(type='text', list=None, max_list_size=None, max_text_size=100, collation=None))),
E         ?                                                                                                                                                                                   ^^^^^^               ^^^^^^^^^^^^^^^
E               ContainerPropertyChange(field_path='constraints.req1', changed_items=[PrimitivePropertyChange(field_path='require', item_severity=<SeverityType.WARNING: 2>, new_value='new_space:new_container', old_value='other_space:other_container')]),
E               AddedProperty(field_path='constraints.uniq2', item_severity=<SeverityType.SAFE: 1>, new_value=UniquenessConstraintDefinition(constraint_type='uniqueness', properties=['category'], by_space=False)),
E               RemovedProperty(field_path='constraints.uniq1', item_severity=<SeverityType.WARNING: 2>, old_value=UniquenessConstraintDefinition(constraint_type='uniqueness', properties=['name'], by_space=True)),
E               ContainerPropertyChange(field_path='indexes.idx1', changed_items=[PrimitivePropertyChange(field_path='properties', item_severity=<SeverityType.WARNING: 2>, new_value="['category']", old_value="['name']"), PrimitivePropertyChange(field_path='cursorable', item_severity=<SeverityType.WARNING: 2>, new_value=False, old_value=True)]),
E               AddedProperty(field_path='indexes.idx3', item_severity=<SeverityType.SAFE: 1>, new_value=InvertedIndex(index_type='inverted', properties=['count'])),
E               RemovedProperty(field_path='indexes.idx2', item_severity=<SeverityType.WARNING: 2>, old_value=InvertedIndex(index_type='inverted', properties=['category', 'distance'])),
E           ]

tests\tests_unit\test_data_model\test_deployer\test_diff_container.py:448: AssertionError
============================== warnings summary ===============================
.venv\Lib\site-packages\pytest_freezegun.py:17
.venv\Lib\site-packages\pytest_freezegun.py:17
  C:\Users\AndersAlbert\Projects\main\neat\.venv\Lib\site-packages\pytest_freezegun.py:17: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    if LooseVersion(pytest.__version__) < LooseVersion('3.6.0'):

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ===========================
FAILED tests/tests_unit/test_data_model/test_deployer/test_diff_container.py::TestContainerDiffer::test_diff[comprehensive changes: add/remove/modify properties, constraints and indexes] - assert [ContainerPropertyChange(field_path='properties.distance', changed_items=[PrimitivePropertyChange(field_path='name', item_severity=<SeverityType.SAFE: 1>, new_value='Distance in km', old_value=None), PrimitivePropertyChange(field_path='description', item_severity=<SeverityType.SAFE: 1>, new_value='The distance property in kilometers', old_value=None), PrimitivePropertyChange(field_path='list', item_severity=<SeverityType.BREAKING: 3>, new_value=False, old_value=True), PrimitivePropertyChange(field_path='maxListSize', item_severity=<SeverityType.WARNING: 2>, new_value=None, old_value=100), PrimitivePropertyChange(field_path='unit.externalId', item_severity=<SeverityType.WARNING: 2>, new_value='unit:kilometer', old_value='unit:meter'), PrimitivePropertyChange(field_path='unit.sourceUnit', item_severity=<SeverityType.WARNING: 2>, new_value='kilometer', old_value='meter'), PrimitivePropertyChange(field_path='immutable', item_severity=<SeverityType.BREAKING: 3>, new_value=True, old_value=False), PrimitivePropertyChange(field_path='nullable', item_severity=<SeverityType.BREAKING: 3>, new_value=False, old_value=True)]), ContainerPropertyChange(field_path='properties.category', changed_items=[PrimitivePropertyChange(field_path='unknownValue', item_severity=<SeverityType.WARNING: 2>, new_value='newUnknoown', old_value='unknown'), ContainerPropertyChange(field_path='enumValues.cat1', changed_items=[PrimitivePropertyChange(field_path='name', item_severity=<SeverityType.SAFE: 1>, new_value='Category One', old_value='Category 1'), PrimitivePropertyChange(field_path='description', item_severity=<SeverityType.SAFE: 1>, new_value='The first category updated', old_value='The first category')]), AddedProperty(field_path='enumValues.cat3', item_severity=<SeverityType.SAFE: 1>, new_value=EnumValue(name=None, description=None)), RemovedProperty(field_path='enumValues.cat2', item_severity=<SeverityType.BREAKING: 3>, old_value=EnumValue(name=None, description=None))]), AddedProperty(field_path='properties.count', item_severity=<SeverityType.SAFE: 1>, new_value=ContainerPropertyDefinition(immutable=False, nullable=True, auto_increment=None, default_value=None, description='A count property', name='Count', type=Int32Property(type='int32', list=None, max_list_size=None))), RemovedProperty(field_path='properties.name', item_severity=<SeverityType.BREAKING: 3>, old_value=ContainerPropertyDefinition(immutable=False, nullable=False, auto_increment=False, default_value='Default Name', description='The name property', name='Name', type=TextProperty(type='text', list=None, max_list_size=None, max_text_size=100, collation=None))), ContainerPropertyChange(field_path='constraints.req1', changed_items=[PrimitivePropertyChange(field_path='require', item_severity=<SeverityType.WARNING: 2>, new_value='new_space:new_container', old_value='other_space:other_container')]), AddedProperty(field_path='constraints.uniq2', item_severity=<SeverityType.SAFE: 1>, new_value=UniquenessConstraintDefinition(constraint_type='uniqueness', properties=['category'], by_space=False)), RemovedProperty(field_path='constraints.uniq1', item_severity=<SeverityType.WARNING: 2>, old_value=UniquenessConstraintDefinition(constraint_type='uniqueness', properties=['name'], by_space=True)), ContainerPropertyChange(field_path='indexes.idx1', changed_items=[PrimitivePropertyChange(field_path='properties', item_severity=<SeverityType.WARNING: 2>, new_value="['category']", old_value="['name']"), PrimitivePropertyChange(field_path='cursorable', item_severity=<SeverityType.WARNING: 2>, new_value=False, old_value=True)]), AddedProperty(field_path='indexes.idx3', item_severity=<SeverityType.SAFE: 1>, new_value=InvertedIndex(index_type='inverted', properties=['count'])), RemovedProperty(field_path='indexes.idx2', item_severity=<SeverityType.WARNING: 2>, old_value=InvertedIndex(index_type='inverted', properties=['category', 'distance']))] == [ContainerPropertyChange(field_path='properties.distance', changed_items=[PrimitivePropertyChange(field_path='name', item_severity=<SeverityType.SAFE: 1>, new_value='Distance in km', old_value=None), PrimitivePropertyChange(field_path='description', item_severity=<SeverityType.SAFE: 1>, new_value='The distance property in kilometers', old_value=None), PrimitivePropertyChange(field_path='list', item_severity=<SeverityType.BREAKING: 3>, new_value=False, old_value=True), PrimitivePropertyChange(field_path='maxListSize', item_severity=<SeverityType.WARNING: 2>, new_value=None, old_value=100), PrimitivePropertyChange(field_path='unit.externalId', item_severity=<SeverityType.WARNING: 2>, new_value='unit:kilometer', old_value='unit:meter'), PrimitivePropertyChange(field_path='unit.sourceUnit', item_severity=<SeverityType.WARNING: 2>, new_value='kilometer', old_value='meter'), PrimitivePropertyChange(field_path='immutable', item_severity=<SeverityType.BREAKING: 3>, new_value=True, old_value=False), PrimitivePropertyChange(field_path='nullable', item_severity=<SeverityType.BREAKING: 3>, new_value=False, old_value=True)]), ContainerPropertyChange(field_path='properties.category', changed_items=[PrimitivePropertyChange(field_path='unknownValue', item_severity=<SeverityType.WARNING: 2>, new_value='newUnknoown', old_value='unknown'), ContainerPropertyChange(field_path='enumValues.cat1', changed_items=[PrimitivePropertyChange(field_path='name', item_severity=<SeverityType.SAFE: 1>, new_value='Category One', old_value='Category 1'), PrimitivePropertyChange(field_path='description', item_severity=<SeverityType.SAFE: 1>, new_value='The first category updated', old_value='The first category')]), AddedProperty(field_path='enumValues.cat3', item_severity=<SeverityType.SAFE: 1>, new_value=EnumValue(name=None, description=None)), RemovedProperty(field_path='enumValues.cat2', item_severity=<SeverityType.BREAKING: 3>, old_value=EnumValue(name=None, description=None))]), AddedProperty(field_path='properties.count', item_severity=<SeverityType.SAFE: 1>, new_value=ContainerPropertyDefinition(immutable=False, nullable=True, auto_increment=None, default_value=None, description='A count property', name='Count', type=Int32Property(type='int32', list=None, max_list_size=None))), RemovedProperty(field_path='properties.name', item_severity=<SeverityType.BREAKING: 3>, old_value=ContainerPropertyDefinition(immutable=False, nullable=False, auto_increment=None, default_value=None, description='The name property', name='Name', type=TextProperty(type='text', list=None, max_list_size=None, max_text_size=100, collation=None))), ContainerPropertyChange(field_path='constraints.req1', changed_items=[PrimitivePropertyChange(field_path='require', item_severity=<SeverityType.WARNING: 2>, new_value='new_space:new_container', old_value='other_space:other_container')]), AddedProperty(field_path='constraints.uniq2', item_severity=<SeverityType.SAFE: 1>, new_value=UniquenessConstraintDefinition(constraint_type='uniqueness', properties=['category'], by_space=False)), RemovedProperty(field_path='constraints.uniq1', item_severity=<SeverityType.WARNING: 2>, old_value=UniquenessConstraintDefinition(constraint_type='uniqueness', properties=['name'], by_space=True)), ContainerPropertyChange(field_path='indexes.idx1', changed_items=[PrimitivePropertyChange(field_path='properties', item_severity=<SeverityType.WARNING: 2>, new_value="['category']", old_value="['name']"), PrimitivePropertyChange(field_path='cursorable', item_severity=<SeverityType.WARNING: 2>, new_value=False, old_value=True)]), AddedProperty(field_path='indexes.idx3', item_severity=<SeverityType.SAFE: 1>, new_value=InvertedIndex(index_type='inverted', properties=['count'])), RemovedProperty(field_path='indexes.idx2', item_severity=<SeverityType.WARNING: 2>, old_value=InvertedIndex(index_type='inverted', properties=['category', 'distance']))]
  
  At index 3 diff: RemovedProperty(field_path='properties.name', item_severity=<SeverityType.BREAKING: 3>, old_value=ContainerPropertyDefinition(immutable=False, nullable=False, auto_increment=False, default_value='Default Name', description='The name property', name='Name', type=TextProperty(type='text', list=None, max_list_size=None, max_text_size=100, collation=None))) != RemovedProperty(field_path='properties.name', item_severity=<SeverityType.BREAKING: 3>, old_value=ContainerPropertyDefinition(immutable=False, nullable=False, auto_increment=None, default_value=None, description='The name property', name='Name', type=TextProperty(type='text', list=None, max_list_size=None, max_text_size=100, collation=None)))
  
  Full diff:
    [
        ContainerPropertyChange(field_path='properties.distance', changed_items=[PrimitivePropertyChange(field_path='name', item_severity=<SeverityType.SAFE: 1>, new_value='Distance in km', old_value=None), PrimitivePropertyChange(field_path='description', item_severity=<SeverityType.SAFE: 1>, new_value='The distance property in kilometers', old_value=None), PrimitivePropertyChange(field_path='list', item_severity=<SeverityType.BREAKING: 3>, new_value=False, old_value=True), PrimitivePropertyChange(field_path='maxListSize', item_severity=<SeverityType.WARNING: 2>, new_value=None, old_value=100), PrimitivePropertyChange(field_path='unit.externalId', item_severity=<SeverityType.WARNING: 2>, new_value='unit:kilometer', old_value='unit:meter'), PrimitivePropertyChange(field_path='unit.sourceUnit', item_severity=<SeverityType.WARNING: 2>, new_value='kilometer', old_value='meter'), PrimitivePropertyChange(field_path='immutable', item_severity=<SeverityType.BREAKING: 3>, new_value=True, old_value=False), PrimitivePropertyChange(field_path='nullable', item_severity=<SeverityType.BREAKING: 3>, new_value=False, old_value=True)]),
        ContainerPropertyChange(field_path='properties.category', changed_items=[PrimitivePropertyChange(field_path='unknownValue', item_severity=<SeverityType.WARNING: 2>, new_value='newUnknoown', old_value='unknown'), ContainerPropertyChange(field_path='enumValues.cat1', changed_items=[PrimitivePropertyChange(field_path='name', item_severity=<SeverityType.SAFE: 1>, new_value='Category One', old_value='Category 1'), PrimitivePropertyChange(field_path='description', item_severity=<SeverityType.SAFE: 1>, new_value='The first category updated', old_value='The first category')]), AddedProperty(field_path='enumValues.cat3', item_severity=<SeverityType.SAFE: 1>, new_value=EnumValue(name=None, description=None)), RemovedProperty(field_path='enumValues.cat2', item_severity=<SeverityType.BREAKING: 3>, old_value=EnumValue(name=None, description=None))]),
        AddedProperty(field_path='properties.count', item_severity=<SeverityType.SAFE: 1>, new_value=ContainerPropertyDefinition(immutable=False, nullable=True, auto_increment=None, default_value=None, description='A count property', name='Count', type=Int32Property(type='int32', list=None, max_list_size=None))),
  -     RemovedProperty(field_path='properties.name', item_severity=<SeverityType.BREAKING: 3>, old_value=ContainerPropertyDefinition(immutable=False, nullable=False, auto_increment=None, default_value=None, description='The name property', name='Name', type=TextProperty(type='text', list=None, max_list_size=None, max_text_size=100, collation=None))),
  ?                                                                                                                                                                                   ^^^^^               ^^^^^
  +     RemovedProperty(field_path='properties.name', item_severity=<SeverityType.BREAKING: 3>, old_value=ContainerPropertyDefinition(immutable=False, nullable=False, auto_increment=False, default_value='Default Name', description='The name property', name='Name', type=TextProperty(type='text', list=None, max_list_size=None, max_text_size=100, collation=None))),
  ?                                                                                                                                                                                   ^^^^^^               ^^^^^^^^^^^^^^^
        ContainerPropertyChange(field_path='constraints.req1', changed_items=[PrimitivePropertyChange(field_path='require', item_severity=<SeverityType.WARNING: 2>, new_value='new_space:new_container', old_value='other_space:other_container')]),
        AddedProperty(field_path='constraints.uniq2', item_severity=<SeverityType.SAFE: 1>, new_value=UniquenessConstraintDefinition(constraint_type='uniqueness', properties=['category'], by_space=False)),
        RemovedProperty(field_path='constraints.uniq1', item_severity=<SeverityType.WARNING: 2>, old_value=UniquenessConstraintDefinition(constraint_type='uniqueness', properties=['name'], by_space=True)),
        ContainerPropertyChange(field_path='indexes.idx1', changed_items=[PrimitivePropertyChange(field_path='properties', item_severity=<SeverityType.WARNING: 2>, new_value="['category']", old_value="['name']"), PrimitivePropertyChange(field_path='cursorable', item_severity=<SeverityType.WARNING: 2>, new_value=False, old_value=True)]),
        AddedProperty(field_path='indexes.idx3', item_severity=<SeverityType.SAFE: 1>, new_value=InvertedIndex(index_type='inverted', properties=['count'])),
        RemovedProperty(field_path='indexes.idx2', item_severity=<SeverityType.WARNING: 2>, old_value=InvertedIndex(index_type='inverted', properties=['category', 'distance'])),
    ]
======================== 1 failed, 2 warnings in 0.69s ========================
